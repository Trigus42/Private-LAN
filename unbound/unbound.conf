# For further information read: https://nlnetlabs.nl/documentation/unbound/unbound.conf/

server:
	# Listen on all interfaces
    interface: 0.0.0.0
	interface: ::0
	
	# The port number, default 53, on which the server responds to queries. 
	port: 53

	# If given, after binding the port the user privileges are dropped.
	# Default is "unbound". If you give username: "" no user change is performed. 
	username: "unbound"

	# The netblock is given as an IP4 or IP6 address with /size appended for a
	# classless network block. The action can be deny, refuse, allow or allow_snoop.
	# Here 0.0.0.0/0 is used cause we run it in a container and access to it should
	# controlled by the host.
	access-control: 0.0.0.0/0 allow

	# If "" is given, logging goes to stderr, or nowhere once daemonized.
	logfile: ""

	# The verbosity number, level 0 means no verbosity, only errors.
	# Level 1 gives operational information.
	# Level 2 gives detailed operational information.
	# Level 3 gives query level information, output per query. 
	# Level 4 gives algorithm level information.
	# Level 5 logs client identification for cache misses.
	# Default is level 1. The verbosity can also be increased from the commandline.
	verbosity: 2

	# Read  the  root  hints from this file. Default is nothing, using
	# builtin hints for the IN class. The file has the format of  zone
	# files,  with  root  nameserver  names  and  addresses  only. The
	# default may become outdated, when servers change,  therefore  it
	# is good practice to use a root-hints file.
	root-hints: /etc/unbound/root.hints

	# File with trust anchor for one zone, which is tracked with RFC5011 probes.
	# The probes are several times per month, thus the machine must be online frequently.
	# The initial file can be one with contents as described in trust-anchor-file.
	# The file is written to when the anchor is updated, so the unbound user must
	# have write permission.
	auto-trust-anchor-file: /usr/share/dnssec-root/trusted-key.key

	# Harden against algorithm downgrade when multiple algorithms are
    # advertised in the DS record.
    harden-algo-downgrade: yes

    # RFC 8020. returns nxdomain to queries for a name below another name that
    # is already known to be nxdomain.
    harden-below-nxdomain: yes

    # Require DNSSEC data for trust-anchored zones, if such data is absent, the
    # zone becomes bogus. If turned off you run the risk of a downgrade attack
    # that disables security for a zone.
    harden-dnssec-stripped: yes

    # Only trust glue if it is within the servers authority.
    harden-glue: yes

    # Ignore very large queries.
    harden-large-queries: yes

    # Perform additional queries for infrastructure data to harden the referral
    # path. Validates the replies if trust anchors are configured and the zones
    # are signed. This enforces DNSSEC validation on nameserver NS sets and the
    # nameserver addresses that are encountered on the referral path to the 
    # answer. Experimental option.
    harden-referral-path: no

    # Ignore very small EDNS buffer sizes from queries.
    harden-short-bufsize: yes

    # Refuse id.server and hostname.bind queries
    hide-identity: yes

    # Refuse version.server and version.bind queries
    hide-version: yes

    # Report this identity rather than the hostname of the server.
    identity: "DNS"

    # These private network addresses are not allowed to be returned for public
    # internet names. Any  occurrence of such addresses are removed from DNS
    # answers. Additionally, the DNSSEC validator may mark the  answers  bogus.
    # This  protects  against DNS  Rebinding
    private-address: 10.0.0.0/8
    private-address: 172.16.0.0/12
    private-address: 192.168.178.0/16
    private-address: 169.254.0.0/16
    private-address: fd00::/8
    private-address: fe80::/10
    private-address: ::ffff:0:0/96

    # Use 0x20-encoded random bits in the query to foil spoof attempts. This
    # perturbs the lowercase and uppercase of query names sent to authority
    # servers and checks if the reply still has the correct casing.
    # This feature is an experimental implementation of draft dns-0x20.
    # Experimental option.
    use-caps-for-id: yes
	
    # Help protect users that rely on this validator for authentication from
    # potentially bad data in the additional section. Instruct the validator to
    # remove data from the additional section of secure messages that are not
    # signed properly. Messages that are insecure, bogus, indeterminate or
    # unchecked are not affected.
    val-clean-additional: yes